{"ast":null,"code":"var _jsxFileName = \"/home/ivan/Desktop/TLLP-SOOKLA/src/components/editTable/editTable.component.jsx\";\nimport React from 'react';\nimport TablePart from '../tablepart/tablepart.component';\nimport CurrentWeek from '../week/week.component';\nimport CustomButton from '../buttons/custombutton.component';\nimport SignInWindow from '../signInWindow/signInWindow.component';\nimport calculateRowsNumer from '../functions/calculateRowsNumber.function';\nimport loadTextareaValuesFromLocalstorage from '../functions/loadTextareaValuesFromLocalstorage.function';\nimport './editTable.styles.scss';\n\nconst bcrypt = require('bcryptjs');\n\nclass EditTable extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      food: ''\n    };\n  }\n\n  hideAllButtons() {\n    const buttons = document.querySelectorAll('button');\n    buttons.forEach(button => {\n      button.style.visibility = 'hidden';\n    });\n    document.querySelector('.header-container-edit-page').remove();\n  }\n\n  saveTableToDatabase() {\n    // Read selected Week and Year from the page ===> Combine their values to one String ===> Pass new string to back-end\n    const nadal = document.querySelector('#select-week-to-edit').value;\n    const year = document.querySelector('h2').innerHTML.split(' ')[2];\n    const nadal_year = nadal + '-' + year; ////////// Read values inserted into each Textarea and send them to backend naming according to Day of The Week and meal //////////\n\n    const mondaybreakfast = document.querySelector('.textarea.esmaspaev.hommikusook').value;\n    const mondayvitamin = document.querySelector('.textarea.esmaspaev.vitamiiniamps').value;\n    const mondaylunch = document.querySelector('.textarea.esmaspaev.louna').value;\n    const mondayoode = document.querySelector('.textarea.esmaspaev.oode').value;\n    const tuesdaybreakfast = document.querySelector('.textarea.teisipaev.hommikusook').value;\n    const tuesdayvitamin = document.querySelector('.textarea.teisipaev.vitamiiniamps').value;\n    const tuesdaylunch = document.querySelector('.textarea.teisipaev.louna').value;\n    const tuesdayoode = document.querySelector('.textarea.teisipaev.oode').value;\n    const wednesdaybreakfast = document.querySelector('.textarea.kolmapaev.hommikusook').value;\n    const wednesdayvitamin = document.querySelector('.textarea.kolmapaev.vitamiiniamps').value;\n    const wednesdaylunch = document.querySelector('.textarea.kolmapaev.louna').value;\n    const wednesdayoode = document.querySelector('.textarea.kolmapaev.oode').value;\n    const thursdaybreakfast = document.querySelector('.textarea.neljapaev.hommikusook').value;\n    const thursdayvitamin = document.querySelector('.textarea.neljapaev.vitamiiniamps').value;\n    const thursdaylunch = document.querySelector('.textarea.neljapaev.louna').value;\n    const thursdayoode = document.querySelector('.textarea.neljapaev.oode').value;\n    const fridaybreakfast = document.querySelector('.textarea.reede.hommikusook').value;\n    const fridayvitamin = document.querySelector('.textarea.reede.vitamiiniamps').value;\n    const fridaylunch = document.querySelector('.textarea.reede.louna').value;\n    const fridayoode = document.querySelector('.textarea.reede.oode').value; ////////// =============================================================================================================== //////////\n\n    const created_in = new Date(); // Make POST Request using fetch API and pass all required inputs to back-end\n    // fetch('http://localhost:3003/saveDataToDatabase', {\n\n    fetch('https://tllp-sookla-api.herokuapp.com/saveDataToDatabase', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        nadal_year,\n        mondaybreakfast,\n        mondayvitamin,\n        mondaylunch,\n        mondayoode,\n        tuesdaybreakfast,\n        tuesdayvitamin,\n        tuesdaylunch,\n        tuesdayoode,\n        wednesdaybreakfast,\n        wednesdayvitamin,\n        wednesdaylunch,\n        wednesdayoode,\n        thursdaybreakfast,\n        thursdayvitamin,\n        thursdaylunch,\n        thursdayoode,\n        fridaybreakfast,\n        fridayvitamin,\n        fridaylunch,\n        fridayoode,\n        created_in\n      })\n    }).then(resp => {\n      console.log(resp);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  loadTableFromDatabase() {\n    const nadal = document.querySelector('#select-week-to-edit').value;\n    const year = document.querySelector('h2').innerHTML.split(' ')[2];\n    const nadal_year = nadal + '-' + year;\n    console.log(nadal_year); // fetch('http://localhost:3003/getDataFromDatabase', {\n\n    fetch('https://tllp-sookla-api.herokuapp.com/getDataFromDatabase', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        nadal_year\n      })\n    }).then(response => response.json()).then(data => {\n      calculateRowsNumer(data);\n    }) // .then(response => console.log(response))\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  loadTableFromLocalstorage() {\n    // localStorage.setItem(`${mealName}-${dayOfTheWeek}-${weekValue}-${yearValue}`, e.target.value);\n    const nadal = document.querySelector('#select-week-to-edit').value;\n    const year = document.querySelector('h2').innerHTML.split(' ')[2];\n    const nadal_year = nadal + '-' + year;\n    console.log(nadal_year);\n    loadTextareaValuesFromLocalstorage(nadal_year);\n  }\n\n  render() {\n    if (localStorage.getItem('Password') === null || localStorage.getItem('enteredPassword') === null) {\n      localStorage.setItem('Password', '');\n      localStorage.setItem('enteredPassword', '');\n    }\n\n    const result = bcrypt.compareSync(localStorage.getItem('enteredPassword'), '$2a$05$R7sKxt.e7YxTHp4Q0fnp4uR8/oX9JekQlmy92nlUNrXHB.UPuNDUa');\n\n    if (result) {\n      // Displaying whole table using smaller components for each workday of the week and also passing props including the name of the day.\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"table-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CurrentWeek, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 16\n        }\n      }), /*#__PURE__*/React.createElement(\"h1\", {\n        style: {\n          marginTop: '0px',\n          marginBottom: '20px',\n          fontSize: '2em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 16\n        }\n      }, \"MEN\\xDC\\xDC\"), /*#__PURE__*/React.createElement(TablePart, {\n        passClass: \"esmaspaev\",\n        paev: \"ESMASP\\xC4EV\",\n        autofocus: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 16\n        }\n      }), /*#__PURE__*/React.createElement(TablePart, {\n        passClass: \"teisipaev\",\n        paev: \"TEISIP\\xC4EV\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 16\n        }\n      }), /*#__PURE__*/React.createElement(TablePart, {\n        passClass: \"kolmapaev\",\n        paev: \"KOLMAP\\xC4EV\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 16\n        }\n      }), /*#__PURE__*/React.createElement(TablePart, {\n        passClass: \"neljapaev\",\n        paev: \"NELJAP\\xC4EV\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 16\n        }\n      }), /*#__PURE__*/React.createElement(TablePart, {\n        passClass: \"reede\",\n        paev: \"REEDE\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 16\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"button-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(CustomButton, {\n        onClickFunction: this.saveTableToDatabase,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 19\n        }\n      }, \"Salvesta andmebaasile \\u290A\"), /*#__PURE__*/React.createElement(CustomButton, {\n        onClickFunction: this.loadTableFromDatabase,\n        backgroundColor: 'yellow',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 19\n        }\n      }, \"Lae alla andmebaasist \\u21CA\"), /*#__PURE__*/React.createElement(CustomButton, {\n        onClickFunction: this.loadTableFromLocalstorage,\n        backgroundColor: 'yellow',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 19\n        }\n      }, \"Taasta \\u2935\"), /*#__PURE__*/React.createElement(CustomButton, {\n        onClickFunction: this.hideAllButtons,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 19\n        }\n      }, \"Peida k\\xF5ik nuppusid \", /*#__PURE__*/React.createElement(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"symbol\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 91\n        }\n      }, \"\\uD83D\\uDEAB\"))));\n    } else {\n      return /*#__PURE__*/React.createElement(SignInWindow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }\n      });\n    }\n  }\n\n}\n\n;\nexport default EditTable;","map":{"version":3,"sources":["/home/ivan/Desktop/TLLP-SOOKLA/src/components/editTable/editTable.component.jsx"],"names":["React","TablePart","CurrentWeek","CustomButton","SignInWindow","calculateRowsNumer","loadTextareaValuesFromLocalstorage","bcrypt","require","EditTable","Component","constructor","state","food","hideAllButtons","buttons","document","querySelectorAll","forEach","button","style","visibility","querySelector","remove","saveTableToDatabase","nadal","value","year","innerHTML","split","nadal_year","mondaybreakfast","mondayvitamin","mondaylunch","mondayoode","tuesdaybreakfast","tuesdayvitamin","tuesdaylunch","tuesdayoode","wednesdaybreakfast","wednesdayvitamin","wednesdaylunch","wednesdayoode","thursdaybreakfast","thursdayvitamin","thursdaylunch","thursdayoode","fridaybreakfast","fridayvitamin","fridaylunch","fridayoode","created_in","Date","fetch","method","headers","body","JSON","stringify","then","resp","console","log","catch","error","loadTableFromDatabase","response","json","data","loadTableFromLocalstorage","render","localStorage","getItem","setItem","result","compareSync","marginTop","marginBottom","fontSize"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport TablePart from '../tablepart/tablepart.component';\nimport CurrentWeek from '../week/week.component';\nimport CustomButton from '../buttons/custombutton.component';\nimport SignInWindow from '../signInWindow/signInWindow.component';\n\nimport calculateRowsNumer from '../functions/calculateRowsNumber.function';\nimport loadTextareaValuesFromLocalstorage from '../functions/loadTextareaValuesFromLocalstorage.function';\n\nimport './editTable.styles.scss';\n\nconst bcrypt = require('bcryptjs');\n\nclass EditTable extends React.Component {\n   constructor() {\n      super();\n\n      this.state = {\n         food: ''\n      }\n   };\n\n   hideAllButtons() {\n      const buttons = document.querySelectorAll('button');\n      buttons.forEach(button => {\n         button.style.visibility = 'hidden';\n      });\n      document.querySelector('.header-container-edit-page').remove();\n   };\n\n   saveTableToDatabase() {\n\n      // Read selected Week and Year from the page ===> Combine their values to one String ===> Pass new string to back-end\n      const nadal = document.querySelector('#select-week-to-edit').value;\n      const year = document.querySelector('h2').innerHTML.split(' ')[2];\n      const nadal_year = nadal + '-' + year;\n\n      ////////// Read values inserted into each Textarea and send them to backend naming according to Day of The Week and meal //////////\n      const mondaybreakfast = document.querySelector('.textarea.esmaspaev.hommikusook').value;\n      const mondayvitamin = document.querySelector('.textarea.esmaspaev.vitamiiniamps').value;\n      const mondaylunch = document.querySelector('.textarea.esmaspaev.louna').value;\n      const mondayoode = document.querySelector('.textarea.esmaspaev.oode').value;\n\n      const tuesdaybreakfast = document.querySelector('.textarea.teisipaev.hommikusook').value;\n      const tuesdayvitamin = document.querySelector('.textarea.teisipaev.vitamiiniamps').value;\n      const tuesdaylunch = document.querySelector('.textarea.teisipaev.louna').value;\n      const tuesdayoode = document.querySelector('.textarea.teisipaev.oode').value;\n\n      const wednesdaybreakfast = document.querySelector('.textarea.kolmapaev.hommikusook').value;\n      const wednesdayvitamin = document.querySelector('.textarea.kolmapaev.vitamiiniamps').value;\n      const wednesdaylunch = document.querySelector('.textarea.kolmapaev.louna').value;\n      const wednesdayoode = document.querySelector('.textarea.kolmapaev.oode').value;\n\n      const thursdaybreakfast = document.querySelector('.textarea.neljapaev.hommikusook').value;\n      const thursdayvitamin = document.querySelector('.textarea.neljapaev.vitamiiniamps').value;\n      const thursdaylunch = document.querySelector('.textarea.neljapaev.louna').value;\n      const thursdayoode = document.querySelector('.textarea.neljapaev.oode').value;\n\n      const fridaybreakfast = document.querySelector('.textarea.reede.hommikusook').value;\n      const fridayvitamin = document.querySelector('.textarea.reede.vitamiiniamps').value;\n      const fridaylunch = document.querySelector('.textarea.reede.louna').value;\n      const fridayoode = document.querySelector('.textarea.reede.oode').value;\n      ////////// =============================================================================================================== //////////\n\n      const created_in = new Date();\n\n      // Make POST Request using fetch API and pass all required inputs to back-end\n\n      // fetch('http://localhost:3003/saveDataToDatabase', {\n      fetch('https://tllp-sookla-api.herokuapp.com/saveDataToDatabase', {\n         method: 'POST',\n         headers: { 'Content-Type': 'application/json' },\n         body: JSON.stringify({\n            nadal_year,\n\n            mondaybreakfast,\n            mondayvitamin,\n            mondaylunch,\n            mondayoode,\n\n            tuesdaybreakfast,\n            tuesdayvitamin,\n            tuesdaylunch,\n            tuesdayoode,\n\n            wednesdaybreakfast,\n            wednesdayvitamin,\n            wednesdaylunch,\n            wednesdayoode,\n\n            thursdaybreakfast,\n            thursdayvitamin,\n            thursdaylunch,\n            thursdayoode,\n\n            fridaybreakfast,\n            fridayvitamin,\n            fridaylunch,\n            fridayoode,\n\n            created_in\n         })\n      })\n         .then((resp) => {\n            console.log(resp);\n         })\n         .catch(function (error) {\n            console.log(error);\n         });\n   };\n\n   loadTableFromDatabase() {\n\n      const nadal = document.querySelector('#select-week-to-edit').value;\n      const year = document.querySelector('h2').innerHTML.split(' ')[2];\n      const nadal_year = nadal + '-' + year;\n      console.log(nadal_year);\n\n      // fetch('http://localhost:3003/getDataFromDatabase', {\n      fetch('https://tllp-sookla-api.herokuapp.com/getDataFromDatabase', {\n         method: 'POST',\n         headers: { 'Content-Type': 'application/json' },\n         body: JSON.stringify({ nadal_year })\n      })\n         .then(response => response.json())\n         .then(data => {\n            calculateRowsNumer(data);\n         })\n         // .then(response => console.log(response))\n         .catch(function (error) {\n            console.log(error);\n         });\n   }\n\n   loadTableFromLocalstorage() {\n\n      // localStorage.setItem(`${mealName}-${dayOfTheWeek}-${weekValue}-${yearValue}`, e.target.value);\n\n      const nadal = document.querySelector('#select-week-to-edit').value;\n      const year = document.querySelector('h2').innerHTML.split(' ')[2];\n      const nadal_year = nadal + '-' + year;\n      console.log(nadal_year);\n\n      loadTextareaValuesFromLocalstorage(nadal_year);\n\n   }\n\n   render() {\n      if (localStorage.getItem('Password') === null || localStorage.getItem('enteredPassword') === null) {\n         localStorage.setItem('Password', '');\n         localStorage.setItem('enteredPassword', '');\n      }\n\n      const result = bcrypt.compareSync(localStorage.getItem('enteredPassword'), '$2a$05$R7sKxt.e7YxTHp4Q0fnp4uR8/oX9JekQlmy92nlUNrXHB.UPuNDUa');\n\n      if (result) {\n\n         // Displaying whole table using smaller components for each workday of the week and also passing props including the name of the day.\n         return (\n            <div className='table-container' >\n               <CurrentWeek />\n               <h1 style={{ marginTop: '0px', marginBottom: '20px', fontSize: '2em' }}>MENÜÜ</h1>\n\n               <TablePart passClass='esmaspaev' paev='ESMASPÄEV' autofocus />\n               <TablePart passClass='teisipaev' paev='TEISIPÄEV' />\n               <TablePart passClass='kolmapaev' paev='KOLMAPÄEV' />\n               <TablePart passClass='neljapaev' paev='NELJAPÄEV' />\n               <TablePart passClass='reede' paev='REEDE' />\n               <div className='button-container'>\n                  <CustomButton onClickFunction={this.saveTableToDatabase} >Salvesta andmebaasile ⤊</CustomButton>\n                  <CustomButton onClickFunction={this.loadTableFromDatabase} backgroundColor={'yellow'} >Lae alla andmebaasist ⇊</CustomButton>\n                  <CustomButton onClickFunction={this.loadTableFromLocalstorage} backgroundColor={'yellow'} >Taasta ⤵</CustomButton>\n                  <CustomButton onClickFunction={this.hideAllButtons}>Peida kõik nuppusid <span role='img' aria-label='symbol' >🚫</span></CustomButton>\n               </div>\n\n            </div>\n         )\n      } else {\n         return (\n            <SignInWindow />\n         )\n      }\n   }\n};\n\nexport default EditTable;"]},"metadata":{},"sourceType":"module"}